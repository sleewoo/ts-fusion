const tsUtilityTypes = [
  "Partial",
  "Required",
  "Readonly",
  "Record",
  "Pick",
  "Omit",
  "Exclude",
  "Extract",
  "NonNullable",
  "Parameters",
  "ConstructorParameters",
  "ReturnType",
  "InstanceType",
  "Awaited",
  "ThisParameterType",
  "OmitThisParameter",
  "ThisType",
  "Uppercase",
  "Lowercase",
  "Capitalize",
  "Uncapitalize",
];

const jsBuiltins = [
  "Object",
  "Function",
  "Boolean",
  "Symbol",
  "Error",
  "AggregateError",
  "EvalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError",
  "InternalError",
  "Number",
  "BigInt",
  "Math",
  "Date",
  "Temporal",
  "String",
  "RegExp",
  "Array",
  "TypedArray",
  "Int8Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Int16Array",
  "Uint16Array",
  "Int32Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array",
  "Float16Array",
  "Float32Array",
  "Float64Array",
  "Map",
  "Set",
  "WeakMap",
  "WeakSet",
  "ArrayBuffer",
  "SharedArrayBuffer",
  "DataView",
  "Atomics",
  "JSON",
  "WeakRef",
  "FinalizationRegistry",
  "Iterator",
  "AsyncIterator",
  "Promise",
  "GeneratorFunction",
  "AsyncGeneratorFunction",
  "Generator",
  "AsyncGenerator",
  "AsyncFunction",
  "Reflect",
  "Proxy",
];

const browserTypes = [
  // Core DOM & UI
  "Window",
  "Document",
  "Element",
  "Node",
  "HTMLElement",
  "HTMLDivElement",
  "HTMLInputElement",
  "NodeList",
  "HTMLCollection",
  "EventTarget",

  // Events
  "Event",
  "MouseEvent",
  "PointerEvent",
  "KeyboardEvent",
  "InputEvent",
  "FocusEvent",
  "CustomEvent",

  // URL & Networking
  "URL",
  "URLSearchParams",
  "Location",
  "Navigator",
  "History",
  "Request",
  "Response",
  "Headers",
  "WebSocket",
  "MessageEvent",

  // Storage & Workers
  "Storage",
  "Worker",
  "ServiceWorkerGlobalScope",
  "Cache",
  "CacheStorage",

  // Multimedia & Graphics
  "HTMLCanvasElement",
  "CanvasRenderingContext2D",
  "AudioContext",
  "MediaStream",
  "HTMLVideoElement",
  "HTMLAudioElement",

  // Observers & Timing
  "IntersectionObserver",
  "IntersectionObserverEntry",
  "MutationObserver",
  "ResizeObserver",
  "Performance",
  "PerformanceEntry",

  // Advanced APIs
  "AbortController",
  "AbortSignal",
  "Crypto",
  "SubtleCrypto",
  "Geolocation",
  "GeolocationPosition",
  "GeolocationCoordinates",
  "NetworkInformation",
];

export default [...tsUtilityTypes, ...jsBuiltins, ...browserTypes].reduce(
  (map: Record<string, string>, entry) => {
    map[entry] = entry;
    return map;
  },
  {},
);
